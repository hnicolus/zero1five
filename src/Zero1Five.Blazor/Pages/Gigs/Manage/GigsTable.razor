@page "/manage/gigs"
@attribute [Authorize(Zero1FivePermissions.Gigs.Default)]
@using Blazorise.Components
@using Volo.Abp.Application.Dtos
@using Zero1Five.Blazor
@using Zero1Five.Categories
@using Zero1Five.Localization
@using Zero1Five.Products
@using Zero1Five.Gigs
@using Volo.Abp.AspNetCore.Components.Web
@inherits Zero1FiveComponentBase
@using Blazorise
@using Zero1Five.Permissions
@inject AbpBlazorMessageLocalizerHelper<Zero1FiveResource> LH
@inject ICategoryAppService CategoryAppService
<MudContainer>
    <MudGrid>
        <MudItem sm="6">
            <MudText Typo="Typo.h6">@L["Gigs"]</MudText>
        </MudItem>
        <MudItem sm="6">
            <MudButton Class="ml-auto" Variant="Variant.Filled" Color="MudBlazor.Color.Primary"
                       OnClick="(e)=>OpenGigForm()">
                @L["NewGig"]
            </MudButton>
        </MudItem>
        <MudItem sm="12" xl="12" xs="12" md="12">
            <DataGrid TItem="GigDto" Data="GigList" ReadData="OnDataGridReadAsync" TotalItems="TotalCount"
                      ShowPager="true" PageSize="PageSize">
                <DataGridColumns>
                    <DataGridColumn Width="150px" TItem="GigDto" Field="@nameof(GigDto.Id)" Sortable="false"
                                    Caption="@L["Actions"]">
                        <DisplayTemplate>
                            <Dropdown>
                                <DropdownToggle Color="Blazorise.Color.Primary">
                                    @L["Actions"]
                                </DropdownToggle>
                                <DropdownMenu>
                                    @if (CanEditGig)
                                    {
                                        <DropdownItem Clicked="() => OpenGigForm(context)">
                                            @L["Edit"]
                                        </DropdownItem>
                                    }
                                    @* @if (CanPublish) *@
                                    @* { *@
                                    @*     @if (context.IsPublished) *@
                                    @*     { *@
                                    @*         <DropdownItem Clicked="()=> HandlePublish(context)"> *@
                                    @*             @L["UnPublish"] *@
                                    @*         </DropdownItem> *@
                                    @*     } *@
                                    @*     else *@
                                    @*     { *@
                                    @*         <DropdownItem Clicked="()=>HandlePublish(context)"> *@
                                    @*             @L["Publish"] *@
                                    @*         </DropdownItem> *@
                                    @*     } *@
                                    @* } *@
                                    @if (CanDeleteGig)
                                    {
                                        <DropdownItem Clicked="() => DeleteProductAsync(context)">
                                            @L["Delete"]
                                        </DropdownItem>
                                    }
                                </DropdownMenu>
                            </Dropdown>
                        </DisplayTemplate>
                    </DataGridColumn>
                    <DataGridColumn TItem="GigDto" Field="@nameof(GigDto.Title)" Caption="@L["Title"]">
                    </DataGridColumn>
                </DataGridColumns>
            </DataGrid>
        </MudItem>

    </MudGrid>
</MudContainer>
